<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/mvc  
    	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    	http://www.springframework.org/schema/jms 
        http://www.springframework.org/schema/jms/spring-jms-4.3.xsd
        http://activemq.apache.org/schema/core 
        http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd"
	default-autowire="byName">

	<context:annotation-config />
	<context:component-scan base-package="com.oy" />
	<mvc:annotation-driven />

    <!-- 引入dbconfig.properties属性文件 -->
    <context:property-placeholder location="classpath:dbconfig.properties" />
    <!-- 由Spring MVC框架自己处理静态资源，并添加一些有用的附加值功能 -->
    <!-- <mvc:resources location="/script/" mapping="/script/**" /> -->
    <!-- 如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理 -->
    <mvc:default-servlet-handler/> 
    
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	<import resource="spring-mybatis.xml"/>

	<bean id="person" name="person" class="com.oy.entity.Person">
		<property name="name" value="shana"></property>
		<property name="age" value="29"></property>
	</bean>
	<bean id="login" name="loginaction" class="com.oy.action.LoginAction">
		<property name="personShana" ref="person"></property>
	</bean>
	
<!-- 	<bean id="httpInter" name="httpInter" class="com.oy.action.HttpInterface">
	</bean> -->
	
	<amq:connectionFactory id="amqConnectionFactory" 
        brokerURL="tcp://192.168.1.152:61616" 
        userName="admin" 
        password="admin" />
    
    <!-- 配置JMS连接工长 -->
    <bean id="connectionFactory"
        class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="amqConnectionFactory" />
        <property name="sessionCacheSize" value="100" />
    </bean>
    
    <!-- 定义消息队列（Queue） -->
    <bean id="demoQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>MavenTest</value>
        </constructor-arg>
    </bean>
    
     <!--测试Topic-->
    <bean id="destinationTopic" class="org.apache.activemq.command.ActiveMQTopic">
       <constructor-arg>
            <value>spring-topic</value>
        </constructor-arg>
    </bean>
    
    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="destinationTopic" />
        <property name="receiveTimeout" value="10000" />
        <!-- true是topic，false是queue，默认是false，此处显示写出false -->
        <property name="pubSubDomain" value="true" />
    </bean>
    
    <!-- 配置消息队列监听者（Queue） -->
    <!-- <bean id="queueMessageListener" class="com.oy.service.impl.QueueMessageListener" /> -->
    
    <!-- 显示注入消息监听容器（Queue），配置连接工厂，监听的目标是demoQueueDestination，监听器是上面定义的监听器 -->
  <!--   <bean id="queueListenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="demoQueueDestination" />
        <property name="messageListener" ref="queueMessageListener" />
    </bean> -->
    
    <!-- 监听方式，这种方式更实用，可以一直监听消息 -->
 <!--    <bean id="topicMessageListen" class="com.oy.service.impl.TopicMessageListen"/>    
    <bean id="defaultMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        注册activemq名称
        <property name="destination" ref="destinationTopic"/>
        <property name="messageListener" ref="topicMessageListen"/>
    </bean> -->
</beans>

